{"ast":null,"code":"import * as countries_json from '../assets/countries.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/weather.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"./weather-card/weather-card.component\";\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 12);\n    i0.ɵɵelement(10, \"app-weather-card\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.city.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"https://flagcdn.com/48x36/\", ctx_r0.city.sys.country.toLowerCase(), \".png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.city.countryName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Local time \", ctx_r0.city.time, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"city\", ctx_r0.city);\n  }\n}\nexport class AppComponent {\n  constructor(weatherService, title) {\n    this.weatherService = weatherService;\n    this.title = title;\n    this.citySearch = '';\n    this.countries = countries_json.default;\n  }\n  ngOnInit() {\n    this.title.setTitle('World Weather');\n  }\n  searchCity() {\n    if (!this.citySearch) {\n      alert('Please enter a city name');\n      return;\n    }\n    this.weatherService.getWeatherForCity(this.citySearch).subscribe({\n      next: data => {\n        data.weather[0].iconUrl = this.weatherService.getWeatherIcon(data.weather[0].icon);\n        data.countryName = this.getCountryName(data.sys.country);\n        data.time = this.getCountryTime(data.timezone);\n        this.city = data;\n      },\n      error: error => {\n        if (error.status == 404) {\n          alert('City not found');\n        } else {\n          alert('An unknown error occurred.');\n        }\n      }\n    });\n  }\n  getCountryName(code) {\n    const country = this.countries.find(country => country.code === code);\n    return country ? country.name : code;\n  }\n  getCountryTime(timezone) {\n    const timeNow = new Date();\n    const time = new Date(timeNow.getTime() + timeNow.getTimezoneOffset() * 60 * 1000 + timezone * 1000);\n    const timeString = time.toLocaleTimeString();\n    const dateString = time.toLocaleDateString();\n    return timeString + ', ' + dateString;\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WeatherService), i0.ɵɵdirectiveInject(i2.Title));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 13,\n      vars: 2,\n      consts: [[1, \"header\"], [\"src\", \"assets/icon.png\", \"alt\", \"logo\", 1, \"logo\"], [1, \"container\", \"pt-5\"], [1, \"input-group\", \"mb-3\"], [1, \"form-floating\"], [\"type\", \"text\", \"list\", \"optionsList\", \"id\", \"searchInput\", \"placeholder\", \"Enter city name\", 1, \"form-control\", 3, \"ngModelChange\", \"keyup.enter\", \"ngModel\"], [\"for\", \"searchInput\"], [\"type\", \"button\", \"id\", \"searchButton\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-6\", \"text-end\"], [1, \"flag\", 3, \"src\"], [1, \"col-6\"], [1, \"weather-card\", 3, \"city\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"img\", 1);\n          i0.ɵɵelementStart(2, \"h1\");\n          i0.ɵɵtext(3, \"World Weather\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.citySearch, $event) || (ctx.citySearch = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"keyup.enter\", function AppComponent_Template_input_keyup_enter_7_listener() {\n            return ctx.searchCity();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Enter city name\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_10_listener() {\n            return ctx.searchCity();\n          });\n          i0.ɵɵtext(11, \"Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(12, AppComponent_div_12_Template, 11, 6, \"div\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.citySearch);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.city);\n        }\n      },\n      dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.WeatherCardComponent],\n      styles: [\".header[_ngcontent-%COMP%]{\\n    background-color: #333;\\n    color: white;\\n    padding: 10px;\\n    text-align: center;\\n    font-weight: bold;\\n    margin-top: auto;\\n    margin-bottom: auto;\\n}\\n\\n.header[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]{\\n    position: absolute;\\n    top: 20px;\\n    left: 20px;\\n    display: block;\\n    margin-right: 10px;\\n    width: 80px;\\n}\\n\\n.weather-card[_ngcontent-%COMP%]{\\n    display: block;\\n    max-width: 350px;\\n}\\n\\n.flag[_ngcontent-%COMP%] {\\n    width: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFVBQVU7SUFDVixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbi10b3A6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG59XHJcblxyXG4uaGVhZGVyIC5sb2dve1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAyMHB4O1xyXG4gICAgbGVmdDogMjBweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgd2lkdGg6IDgwcHg7XHJcbn1cclxuXHJcbi53ZWF0aGVyLWNhcmR7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1heC13aWR0aDogMzUwcHg7XHJcbn1cclxuXHJcbi5mbGFnIHtcclxuICAgIHdpZHRoOiAzMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["countries_json","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","city","name","ɵɵpropertyInterpolate1","sys","country","toLowerCase","ɵɵsanitizeUrl","ɵɵtextInterpolate1","countryName","time","ɵɵproperty","AppComponent","constructor","weatherService","title","citySearch","countries","default","ngOnInit","setTitle","searchCity","alert","getWeatherForCity","subscribe","next","data","weather","iconUrl","getWeatherIcon","icon","getCountryName","getCountryTime","timezone","error","status","code","find","timeNow","Date","getTime","getTimezoneOffset","timeString","toLocaleTimeString","dateString","toLocaleDateString","ɵɵdirectiveInject","i1","WeatherService","i2","Title","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtwoWayListener","AppComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","AppComponent_Template_input_keyup_enter_7_listener","AppComponent_Template_button_click_10_listener","ɵɵtemplate","AppComponent_div_12_Template","ɵɵtwoWayProperty"],"sources":["/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/app.component.ts","/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from './services/weather.service';\nimport * as countries_json from '../assets/countries.json';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public citySearch: string = '';\n  public city: any;\n  public countries = (countries_json as any).default;\n\n  constructor(\n    private weatherService: WeatherService,\n    private title: Title,\n  ) { }\n\n  ngOnInit() {\n    this.title.setTitle('World Weather');\n  }\n\n  searchCity() {\n    if (!this.citySearch) {\n      alert('Please enter a city name');\n      return;\n    }\n    this.weatherService.getWeatherForCity(this.citySearch).subscribe({\n      next: (data: any) => {\n        data.weather[0].iconUrl = this.weatherService.getWeatherIcon(data.weather[0].icon);\n        data.countryName = this.getCountryName(data.sys.country);\n        data.time = this.getCountryTime(data.timezone);\n        this.city = data;\n      },\n      error: (error) => {\n        if (error.status == 404) {\n          alert('City not found');\n        }\n        else {\n          alert('An unknown error occurred.');\n        }\n      }\n    });\n  }\n\n  getCountryName(code: string) {\n    const country = this.countries.find((country: any) => country.code === code);\n    return country ? country.name : code;\n  }\n\n  getCountryTime(timezone: number) {\n    const timeNow = new Date();\n    const time = new Date(timeNow.getTime() + (timeNow.getTimezoneOffset() * 60 * 1000) + (timezone * 1000));\n    const timeString = time.toLocaleTimeString();\n    const dateString = time.toLocaleDateString();\n    return timeString + ', ' + dateString;\n  }\n\n}\n","<div class=\"header\">\n  <img class=\"logo\" src=\"assets/icon.png\" alt=\"logo\">\n  <h1>World Weather</h1>\n</div>\n\n<div class=\"container pt-5\">\n  <div class=\"input-group mb-3\">\n    <div class=\"form-floating\">\n      <input [(ngModel)]=\"citySearch\" type=\"text\" list=\"optionsList\" id=\"searchInput\" class=\"form-control\" placeholder=\"Enter city name\" (keyup.enter)=\"searchCity()\" />\n      <label for=\"searchInput\">Enter city name</label>\n    </div>\n    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"searchButton\" (click)=\"searchCity()\">Search</button>\n  </div>\n\n  <div class=\"row\" *ngIf=\"city\">\n    <div class=\"col-6 text-end\">\n      <h2>{{city.name}}</h2>\n      <p><img class=\"flag\" src=\"https://flagcdn.com/48x36/{{city.sys.country.toLowerCase()}}.png\"> {{city.countryName}}</p>\n      <p>Local time {{city.time}}</p>\n    </div>\n    <div class=\"col-6\">\n      <app-weather-card class=\"weather-card\" [city]=\"city\"></app-weather-card>\n    </div>\n  </div>\n</div>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}