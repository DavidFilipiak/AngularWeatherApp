{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class WeatherCardComponent {\n  static {\n    this.ɵfac = function WeatherCardComponent_Factory(t) {\n      return new (t || WeatherCardComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WeatherCardComponent,\n      selectors: [[\"app-weather-card\"]],\n      inputs: {\n        city: \"city\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 17,\n      vars: 5,\n      consts: [[1, \"card\"], [\"alt\", \"weather icon\", 1, \"card-img-top\", \"img\", 3, \"src\"], [1, \"card-body\"], [1, \"row\"], [1, \"col\"], [1, \"card-text\"]],\n      template: function WeatherCardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"img\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"span\", 5);\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 3)(11, \"div\", 4)(12, \"span\", 5);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"span\", 5);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"src\", ctx.city.weather[0].iconUrl, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.city.weather[0].main);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"\", ctx.city.main.temp, \" \\u00B0C\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"Humidity: \", ctx.city.main.humidity, \"%\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Wind speed: \", ctx.city.wind.speed, \" m/s\");\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["WeatherCardComponent","selectors","inputs","city","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","WeatherCardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","weather","iconUrl","ɵɵsanitizeUrl","ɵɵtextInterpolate","main","ɵɵtextInterpolate1","temp","humidity","wind","speed"],"sources":["/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/weather-card/weather-card.component.ts","/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/weather-card/weather-card.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-card',\n  standalone: true,\n  imports: [],\n  templateUrl: './weather-card.component.html',\n  styleUrl: './weather-card.component.css'\n})\nexport class WeatherCardComponent {\n  @Input() city: any;\n}\n","<div class=\"card\">\n    <img class=\"card-img-top img\" [src]=\"city.weather[0].iconUrl\" alt=\"weather icon\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <span class=\"card-text\">{{city.weather[0].main}}</span>\n            </div>\n            <div class=\"col\">\n                <span class=\"card-text\">{{city.main.temp}} °C</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <span class=\"card-text\">Humidity: {{city.main.humidity}}%</span>\n            </div>\n            <div class=\"col\">\n                <span class=\"card-text\">Wind speed: {{city.wind.speed}} m/s</span>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":";AASA,OAAM,MAAOA,oBAAoB;;;uBAApBA,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAC,SAAA;MAAAC,MAAA;QAAAC,IAAA;MAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTjCP,EAAA,CAAAS,cAAA,aAAkB;UACdT,EAAA,CAAAU,SAAA,aAAiF;UAIrEV,EAHZ,CAAAS,cAAA,aAAuB,aACF,aACI,cACW;UAAAT,EAAA,CAAAW,MAAA,GAAwB;UACpDX,EADoD,CAAAY,YAAA,EAAO,EACrD;UAEFZ,EADJ,CAAAS,cAAA,aAAiB,cACW;UAAAT,EAAA,CAAAW,MAAA,GAAqB;UAErDX,EAFqD,CAAAY,YAAA,EAAO,EAClD,EACJ;UAGEZ,EAFR,CAAAS,cAAA,cAAiB,cACI,eACW;UAAAT,EAAA,CAAAW,MAAA,IAAiC;UAC7DX,EAD6D,CAAAY,YAAA,EAAO,EAC9D;UAEFZ,EADJ,CAAAS,cAAA,cAAiB,eACW;UAAAT,EAAA,CAAAW,MAAA,IAAmC;UAI3EX,EAJ2E,CAAAY,YAAA,EAAO,EAChE,EACJ,EACJ,EACJ;;;UAnB4BZ,EAAA,CAAAa,SAAA,EAA+B;UAA/Bb,EAAA,CAAAc,UAAA,QAAAN,GAAA,CAAAX,IAAA,CAAAkB,OAAA,IAAAC,OAAA,EAAAhB,EAAA,CAAAiB,aAAA,CAA+B;UAIzBjB,EAAA,CAAAa,SAAA,GAAwB;UAAxBb,EAAA,CAAAkB,iBAAA,CAAAV,GAAA,CAAAX,IAAA,CAAAkB,OAAA,IAAAI,IAAA,CAAwB;UAGxBnB,EAAA,CAAAa,SAAA,GAAqB;UAArBb,EAAA,CAAAoB,kBAAA,KAAAZ,GAAA,CAAAX,IAAA,CAAAsB,IAAA,CAAAE,IAAA,aAAqB;UAKrBrB,EAAA,CAAAa,SAAA,GAAiC;UAAjCb,EAAA,CAAAoB,kBAAA,eAAAZ,GAAA,CAAAX,IAAA,CAAAsB,IAAA,CAAAG,QAAA,MAAiC;UAGjCtB,EAAA,CAAAa,SAAA,GAAmC;UAAnCb,EAAA,CAAAoB,kBAAA,iBAAAZ,GAAA,CAAAX,IAAA,CAAA0B,IAAA,CAAAC,KAAA,SAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}