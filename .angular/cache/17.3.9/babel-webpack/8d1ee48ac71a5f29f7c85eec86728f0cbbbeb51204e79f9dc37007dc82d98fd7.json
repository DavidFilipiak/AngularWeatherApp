{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(city_r1.name);\n  }\n}\nexport class AppComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.citySearch = '';\n    this.cities = [];\n  }\n  ngOnInit() {}\n  searchCity(citySearch) {\n    this.weatherService.getCities(citySearch).subscribe({\n      next: data => {\n        console.log(data);\n        this.cities = data;\n      },\n      error: error => {\n        alert(error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 21,\n      vars: 2,\n      consts: [[1, \"header\"], [1, \"container\", \"pt-5\"], [1, \"form-group\"], [\"for\", \"searchInput\"], [\"type\", \"text\", \"list\", \"optionsList\", \"id\", \"searchInput\", \"placeholder\", \"Enter city name\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"id\", \"optionsList\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"pt-3\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Weather Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Search a city\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.citySearch, $event) || (ctx.citySearch = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"datalist\", 5);\n          i0.ɵɵtemplate(9, AppComponent_option_9_Template, 2, 1, \"option\", 6);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"p\");\n          i0.ɵɵtext(12, \"City:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"p\");\n          i0.ɵɵtext(14, \"Country:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"p\");\n          i0.ɵɵtext(16, \"Temperature:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"p\");\n          i0.ɵɵtext(18, \"Humidity:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"p\");\n          i0.ɵɵtext(20, \"Wind speed:\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.citySearch);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".header[_ngcontent-%COMP%]{\\n    background-color: #333;\\n    color: white;\\n    padding: 10px;\\n    text-align: center;\\n    font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","city_r1","name","AppComponent","constructor","weatherService","citySearch","cities","ngOnInit","searchCity","getCities","subscribe","next","data","console","log","error","alert","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtwoWayListener","AppComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtwoWayBindingSet","ɵɵtemplate","AppComponent_option_9_Template","ɵɵtwoWayProperty","ɵɵproperty"],"sources":["/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/app.component.ts","/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from './services/weather.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public citySearch: string = '';\n  public cities: any[] = [];\n\n  constructor(\n    private weatherService: WeatherService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  searchCity(citySearch: string) {\n    this.weatherService.getCities(citySearch).subscribe({\n      next: (data: any[]) => {\n        console.log(data);\n        this.cities = data;\n      },\n      error: (error) => {\n        alert(error);\n      }\n    });\n  }\n\n}\n","<div class=\"header\">\n  <h1>Weather Search</h1>\n</div>\n\n<div class=\"container pt-5\">\n  <div class=\"form-group\">\n    <label for=\"searchInput\">Search a city</label>\n    <input [(ngModel)]=\"citySearch\" type=\"text\" list=\"optionsList\" id=\"searchInput\" class=\"form-control\" placeholder=\"Enter city name\" />\n    <datalist id=\"optionsList\">\n      <option *ngFor=\"let city of cities\">{{city.name}}</option>\n    </datalist>\n  </div>\n</div>\n\n<div class=\"container pt-3\">\n  <p>City:</p>\n  <p>Country:</p>\n  <p>Temperature:</p>\n  <p>Humidity:</p>\n  <p>Wind speed:</p>\n</div>\n\n"],"mappings":";;;;;;ICSMA,EAAA,CAAAC,cAAA,aAAoC;IAAAD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAtBH,EAAA,CAAAI,SAAA,EAAa;IAAbJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,IAAA,CAAa;;;ADAvD,OAAM,MAAOC,YAAY;EAIvBC,YACUC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAJjB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,MAAM,GAAU,EAAE;EAIrB;EAEJC,QAAQA,CAAA,GAER;EAEAC,UAAUA,CAACH,UAAkB;IAC3B,IAAI,CAACD,cAAc,CAACK,SAAS,CAACJ,UAAU,CAAC,CAACK,SAAS,CAAC;MAClDC,IAAI,EAAGC,IAAW,IAAI;QACpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI,CAACN,MAAM,GAAGM,IAAI;MACpB,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAI;QACfC,KAAK,CAACD,KAAK,CAAC;MACd;KACD,CAAC;EACJ;;;uBAtBWb,YAAY,EAAAR,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAZjB,YAAY;MAAAkB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRvBhC,EADF,CAAAC,cAAA,aAAoB,SACd;UAAAD,EAAA,CAAAE,MAAA,qBAAc;UACpBF,EADoB,CAAAG,YAAA,EAAK,EACnB;UAIFH,EAFJ,CAAAC,cAAA,aAA4B,aACF,eACG;UAAAD,EAAA,CAAAE,MAAA,oBAAa;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC9CH,EAAA,CAAAC,cAAA,eAAqI;UAA9HD,EAAA,CAAAkC,gBAAA,2BAAAC,qDAAAC,MAAA;YAAApC,EAAA,CAAAqC,kBAAA,CAAAJ,GAAA,CAAAtB,UAAA,EAAAyB,MAAA,MAAAH,GAAA,CAAAtB,UAAA,GAAAyB,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAwB;UAA/BpC,EAAA,CAAAG,YAAA,EAAqI;UACrIH,EAAA,CAAAC,cAAA,kBAA2B;UACzBD,EAAA,CAAAsC,UAAA,IAAAC,8BAAA,oBAAoC;UAG1CvC,EAFI,CAAAG,YAAA,EAAW,EACP,EACF;UAGJH,EADF,CAAAC,cAAA,cAA4B,SACvB;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAI;UACZH,EAAA,CAAAC,cAAA,SAAG;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAI;UACfH,EAAA,CAAAC,cAAA,SAAG;UAAAD,EAAA,CAAAE,MAAA,oBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAI;UACnBH,EAAA,CAAAC,cAAA,SAAG;UAAAD,EAAA,CAAAE,MAAA,iBAAS;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAChBH,EAAA,CAAAC,cAAA,SAAG;UAAAD,EAAA,CAAAE,MAAA,mBAAW;UAChBF,EADgB,CAAAG,YAAA,EAAI,EACd;;;UAbKH,EAAA,CAAAI,SAAA,GAAwB;UAAxBJ,EAAA,CAAAwC,gBAAA,YAAAP,GAAA,CAAAtB,UAAA,CAAwB;UAEJX,EAAA,CAAAI,SAAA,GAAS;UAATJ,EAAA,CAAAyC,UAAA,YAAAR,GAAA,CAAArB,MAAA,CAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}