{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/weather.service\";\nexport class AppComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.cities = [];\n  }\n  ngOnInit() {}\n  searchCity(citySearch) {\n    this.weatherService.getCities(citySearch).subscribe({\n      next: data => {\n        this.cities = data;\n      },\n      error: error => {\n        alert(error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 23,\n      vars: 0,\n      consts: [[1, \"header\"], [1, \"container\", \"pt-5\"], [1, \"form-group\"], [\"for\", \"searchInput\"], [\"type\", \"text\", \"list\", \"optionsList\", \"id\", \"searchInput\", \"placeholder\", \"Enter city name\", 1, \"form-control\"], [\"id\", \"optionsList\"], [\"value\", \"Bratislava\"], [\"value\", \"Brno\"], [\"value\", \"New York\"], [1, \"container\", \"pt-3\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Weather Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Search a city\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementStart(8, \"datalist\", 5);\n          i0.ɵɵelement(9, \"option\", 6)(10, \"option\", 7)(11, \"option\", 8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"p\");\n          i0.ɵɵtext(14, \"City:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"p\");\n          i0.ɵɵtext(16, \"Country:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"p\");\n          i0.ɵɵtext(18, \"Temperature:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"p\");\n          i0.ɵɵtext(20, \"Humidity:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"p\");\n          i0.ɵɵtext(22, \"Wind speed:\");\n          i0.ɵɵelementEnd()();\n        }\n      },\n      styles: [\".header[_ngcontent-%COMP%]{\\n    background-color: #333;\\n    color: white;\\n    padding: 10px;\\n    text-align: center;\\n    font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["AppComponent","constructor","weatherService","cities","ngOnInit","searchCity","citySearch","getCities","subscribe","next","data","error","alert","i0","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/app.component.ts","/mnt/d/programming projects/AngularWeatherApp/angular-weather-app/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from './services/weather.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public cities = [];\n\n  constructor(\n    private weatherService: WeatherService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  searchCity(citySearch: string) {\n    this.weatherService.getCities(citySearch).subscribe({\n      next: (data) => {\n        this.cities = data;\n      },\n      error: (error) => {\n        alert(error);\n      }\n    });\n  }\n\n}\n","<div class=\"header\">\n  <h1>Weather Search</h1>\n</div>\n\n<div class=\"container pt-5\">\n  <div class=\"form-group\">\n    <label for=\"searchInput\">Search a city</label>\n    <input type=\"text\" list=\"optionsList\" id=\"searchInput\" class=\"form-control\" placeholder=\"Enter city name\" />\n    <datalist id=\"optionsList\">\n      <option value=\"Bratislava\">\n      <option value=\"Brno\">\n      <option value=\"New York\">\n    </datalist>\n  </div>\n</div>\n\n<div class=\"container pt-3\">\n  <p>City:</p>\n  <p>Country:</p>\n  <p>Temperature:</p>\n  <p>Humidity:</p>\n  <p>Wind speed:</p>\n</div>\n\n"],"mappings":";;AASA,OAAM,MAAOA,YAAY;EAGvBC,YACUC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAHjB,KAAAC,MAAM,GAAG,EAAE;EAId;EAEJC,QAAQA,CAAA,GAER;EAEAC,UAAUA,CAACC,UAAkB;IAC3B,IAAI,CAACJ,cAAc,CAACK,SAAS,CAACD,UAAU,CAAC,CAACE,SAAS,CAAC;MAClDC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACP,MAAM,GAAGO,IAAI;MACpB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,KAAK,CAACD,KAAK,CAAC;MACd;KACD,CAAC;EACJ;;;uBApBWX,YAAY,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAZhB,YAAY;MAAAiB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRvBV,EADF,CAAAY,cAAA,aAAoB,SACd;UAAAZ,EAAA,CAAAa,MAAA,qBAAc;UACpBb,EADoB,CAAAc,YAAA,EAAK,EACnB;UAIFd,EAFJ,CAAAY,cAAA,aAA4B,aACF,eACG;UAAAZ,EAAA,CAAAa,MAAA,oBAAa;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAC9Cd,EAAA,CAAAe,SAAA,eAA4G;UAC5Gf,EAAA,CAAAY,cAAA,kBAA2B;UAGzBZ,EAFA,CAAAe,SAAA,gBAA2B,iBACN,iBACI;UAG/Bf,EAFI,CAAAc,YAAA,EAAW,EACP,EACF;UAGJd,EADF,CAAAY,cAAA,cAA4B,SACvB;UAAAZ,EAAA,CAAAa,MAAA,aAAK;UAAAb,EAAA,CAAAc,YAAA,EAAI;UACZd,EAAA,CAAAY,cAAA,SAAG;UAAAZ,EAAA,CAAAa,MAAA,gBAAQ;UAAAb,EAAA,CAAAc,YAAA,EAAI;UACfd,EAAA,CAAAY,cAAA,SAAG;UAAAZ,EAAA,CAAAa,MAAA,oBAAY;UAAAb,EAAA,CAAAc,YAAA,EAAI;UACnBd,EAAA,CAAAY,cAAA,SAAG;UAAAZ,EAAA,CAAAa,MAAA,iBAAS;UAAAb,EAAA,CAAAc,YAAA,EAAI;UAChBd,EAAA,CAAAY,cAAA,SAAG;UAAAZ,EAAA,CAAAa,MAAA,mBAAW;UAChBb,EADgB,CAAAc,YAAA,EAAI,EACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}